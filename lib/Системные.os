// MIT License
// Copyright (c) 2018 Vladimir Vasiliev
// https://github.com/vasvl123/OneScriptDB


Функция СтрокуВСтруктуру(Знач Стр)
	Стр = СтрРазделить(Стр, Символы.Таб);
	Ключ = Неопределено;
	Рез = Неопределено;
	Для Каждого знСтр Из Стр Цикл
		Если Ключ = Неопределено Тогда
			Ключ = знСтр;
		Иначе
			Если Рез = Неопределено Тогда
				Рез = Новый Структура;
			КонецЕсли;
			Рез.Вставить(Ключ, знСтр);
			Ключ = Неопределено;
		КонецЕсли;
	КонецЦикла;
	Возврат Рез;
КонецФункции


Функция ПокаЦикл(Данные, Параметры) Экспорт
	ЭтотУзел = Параметры.ЭтотУзел;
	УсловиеПока = Параметры.УсловиеПока;
	ПовторЦикл = Параметры.ПовторЦикл;
	Узел = Неопределено;
	Пока Данные.Интерпретировать(УсловиеПока) Цикл
		НовыйУзел = Данные.КопироватьВетку(ПовторЦикл, ЭтотУзел, ЭтотУзел.Родитель, , , Ложь);
		Если Узел = Неопределено Тогда
			Узел = НовыйУзел;
		Иначе
			Узел = Данные.НовыйСоседний(Узел, НовыйУзел, Истина);
		конецЕсли;
	КонецЦикла;
	Возврат Узел;
КонецФункции // ПокаЦикл()


Функция СписокБаз(Данные, Параметры) Экспорт
	Узел = Данные.НовыйУзел(Новый Структура("Имя", "Список"), Истина);
	родУзел = Узел;
	СписокБаз = НайтиФайлы(ОбъединитьПути(ТекущийКаталог(), "data"), "*.osdb", Истина);
	Если СписокБаз.Количество() Тогда
		Для каждого БазаДанных Из СписокБаз Цикл
			стрУзел = Новый Структура("Имя, Значение", "Строка", БазаДанных.ИмяБезРасширения);
			Если Узел.Имя = "Список" Тогда
				Узел = Данные.НовыйДочерний(Узел, стрУзел, Истина);
			Иначе
				Узел = Данные.НовыйСоседний(Узел, стрУзел, Истина);
			КонецЕсли;
		КонецЦикла;
	КонецЕсли;
	Возврат родУзел;
КонецФункции


Функция СписокДанных(Данные, Параметры) Экспорт
	БазаДанных = Параметры.ИмяБазыДанных;
	ИндексИмя = ОбъединитьПути(ТекущийКаталог(), "data", БазаДанных + ".files", "index");
	Индекс = Новый Файл(ИндексИмя);
	Если НЕ Индекс.Существует() Тогда
		Соединение = Неопределено;
		Данные.ПередатьСтроку(Соединение, "osdb	" + БазаДанных);
		Попытка
			Соединение.ПрочитатьСтроку();
			Соединение.Закрыть();
		Исключение
			Сообщить(ОписаниеОшибки());
			Возврат Неопределено;
		КонецПопытки;
	КонецЕсли;
	Индекс = Новый ТекстовыйДокумент;
	Индекс.Прочитать(ИндексИмя);
	Узел = Данные.НовыйУзел(Новый Структура("Имя", "Ссылка"), Истина);
	родУзел = Узел;
	Узел = Данные.НовыйДочерний(Узел, Новый Структура("Имя", "Список"), Истина);
	Для н = 1 По Индекс.КоличествоСтрок() Цикл
		нУзел = СтрокуВСтруктуру(Индекс.ПолучитьСтроку(н));
		стрУзел = Новый Структура("Имя, Значение", "Строка", нУзел.data);
		Если Узел.Имя = "Список" Тогда
			Узел = Данные.НовыйДочерний(Узел, стрУзел, Истина);
		Иначе
			Узел = Данные.НовыйСоседний(Узел, стрУзел, Истина);
		КонецЕсли;
		Данные.НовыйАтрибут(Узел, Новый Структура("Имя, Значение", "ПозицияДанных", нУзел.dataposition), Истина);
		Данные.НовыйАтрибут(Узел, Новый Структура("Имя, Значение", "Размер", нУзел.length), Истина);
		Данные.НовыйАтрибут(Узел, Новый Структура("Имя, Значение", "ВремяИзменения", "" + Данные.УзелСвойство(нУзел, "date")), Истина);
	КонецЦикла;
	Возврат родУзел;
КонецФункции


Функция СписокФайлов(Данные, Параметры) Экспорт
	Узел = Данные.НовыйУзел(Новый Структура("Имя", "Ссылка"), Истина);
	родУзел = Узел;
	Узел = Данные.НовыйДочерний(Узел, Новый Структура("Имя", "Список"), Истина);
	СписокФайлов = НайтиФайлы(ОбъединитьПути(ТекущийКаталог(), "data", ".files"), "*.*", Истина);
	Если СписокФайлов.Количество() Тогда
		Для каждого элФайл Из СписокФайлов Цикл
			стрУзел = Новый Структура("Имя, Значение", "Строка", элФайл.Имя);
			Если Узел.Имя = "Список" Тогда
				Узел = Данные.НовыйДочерний(Узел, стрУзел, Истина);
			Иначе
				Узел = Данные.НовыйСоседний(Узел, стрУзел, Истина);
			КонецЕсли;
			Данные.НовыйАтрибут(Узел, Новый Структура("Имя, Значение", "Размер", элФайл.Размер()), Истина);
			Данные.НовыйАтрибут(Узел, Новый Структура("Имя, Значение", "ВремяИзменения", элФайл.ПолучитьВремяИзменения()), Истина);
		КонецЦикла;
	КонецЕсли;
	Возврат родУзел;
КонецФункции
