// MIT License
// Copyright (c) 2018 Vladimir Vasiliev
// https://github.com/vasvl123/OneScriptDB
//


Перем Хост, Порт;
Перем ПерезапуститьСервер, ОстановитьСервер;
Перем Ресурсы;
Перем Загрузка;
Перем ВсеДанные;


Функция СтрокуВСтруктуру(Знач Стр)
	Стр = СтрРазделить(Стр, Символы.Таб);
	Ключ = Неопределено;
	Рез = Неопределено;
	Для Каждого знСтр Из Стр Цикл
		Если Ключ = Неопределено Тогда
			Ключ = знСтр;
		Иначе
			Если Рез = Неопределено Тогда
				Рез = Новый Структура;
			КонецЕсли;
			Рез.Вставить(Ключ, РаскодироватьСтроку(знСтр, СпособКодированияСтроки.КодировкаURL));
			Ключ = Неопределено;
		КонецЕсли;
	КонецЦикла;
	Возврат Рез;
КонецФункции


Функция СтруктуруВСтроку(Структ)
	Результат = "";
	Если НЕ Структ = Неопределено Тогда
		Для каждого Элемент Из Структ Цикл
			Результат = ?(Результат = "", "", Результат + Символы.Таб) + Элемент.Ключ + Символы.Таб + КодироватьСтроку(Элемент.Значение, СпособКодированияСтроки.КодировкаURL);
		КонецЦикла;
	КонецЕсли;
	Возврат Результат;
КонецФункции


Функция Раскодировать(знПараметра)
	Возврат РаскодироватьСтроку(знПараметра, СпособКодированияСтроки.КодировкаURL);
КонецФункции


Функция Кодировать(знПараметра)
	Возврат КодироватьСтроку(знПараметра, СпособКодированияСтроки.КодировкаURL);
КонецФункции


Функция УдаленныйУзелАдрес(УдаленныйУзел)
	Возврат Лев(УдаленныйУзел, Найти(УдаленныйУзел, ":") - 1);
КонецФункции


Функция ОбработатьДанные(Соединение, Запрос)
	Перем Команда, ИмяДанных, БазаДанных, ПозицияДанных;

	ВремяНачало = ТекущаяДата();

	Запрос.Свойство("osdb", БазаДанных);
	Запрос.Свойство("data", ИмяДанных);

	ИмяФайлаДанных = ОбъединитьПути(ТекущийКаталог(), "data", ".files", ИмяДанных);
	Ответ = ПолучитьДвоичныеДанныеИзСтроки("");

	Если НЕ "" + БазаДанных = "" Тогда // имя контейнера указано
		Данные = ВсеДанные.Получить(БазаДанных);
		Если Данные = Неопределено Тогда // открыть контейнер
			Данные = Новый dbaccess(ОбъединитьПути(ТекущийКаталог(), "data" , БазаДанных));
			ВсеДанные.Вставить(БазаДанных, Данные);
		КонецЕсли;
	КонецЕсли;

	Если Запрос.Свойство("datatype") Тогда // запись данных
		Попытка
			Соединение.ОтправитьСтроку("?");
			дДанные = Соединение.ПрочитатьДвоичныеДанные();
			Если НЕ "" + БазаДанных = "" Тогда // имя контейнера указано
				Если Данные.ОткрытьПотокДанных(Истина) Тогда
					Запрос.Вставить("date", "" + ТекущаяДата());
					Ответ = ПолучитьДвоичныеДанныеИзСтроки(Данные.ДобавитьДанные(Запрос, дДанные));
				КонецЕсли;
			Иначе
				дДанные.Записать(ИмяФайлаДанных);
			КонецЕсли;
		Исключение
			Сообщить(ОписаниеОшибки());
		КонецПопытки;

	ИначеЕсли НЕ "" + БазаДанных = "" Тогда // чтение данных

		Запрос.Свойство("dataposition", ПозицияДанных);

		Если НЕ "" + ПозицияДанных = "" Тогда // прочитать файл по позиции в контейнере
			Ответ = Данные.ПолучитьДанные(Число(ПозицияДанных));
		Иначе // получить список контейнеров
			Ответ = ПолучитьДвоичныеДанныеИзСтроки(Данные.ПолучитьЗаголовки());
		КонецЕсли;
	Иначе // прочитать из файла
		Ответ = Новый ДвоичныеДанные(ИмяФайлаДанных);
	КонецЕсли;

	Сообщить(СокрЛП(ТекущаяДата()) + " time=" + (ТекущаяДата() - ВремяНачало) + Загрузка);

	Возврат Ответ;

КонецФункции


Процедура ОбработатьСоединения() Экспорт

	Версия = "0.0.1";
	Хост = "127.0.0.1";

	Таймаут = 10;
	Если АргументыКоманднойСтроки.Количество() Тогда
		Порт = Число(АргументыКоманднойСтроки[0]);
	Иначе
		Порт = 8887;
	КонецЕсли;

	TCPСервер = Новый TCPСервер(Порт);
	TCPСервер.Запустить();
	Сообщить(СокрЛП(ТекущаяДата()) + " - Сервер данных запущен на порту: " + СокрЛП(Порт));

	ОстановитьСервер = Ложь;
	ПерезапуститьСервер = Ложь;
	Соединение = Неопределено;

	ПодключитьСценарий(ОбъединитьПути(ТекущийКаталог(), "dbaccess.os"), "dbaccess");
	ВсеДанные = Новый Соответствие();

	Профили = Новый dbaccess(ОбъединитьПути(ТекущийКаталог(), "data" , "users"));

	ПустойЦикл = 0;
	РабочийЦикл = 0;
	ЗамерВремени = ТекущаяДата();

	Пока Истина Цикл

		Если ПустойЦикл + РабочийЦикл > 999 Тогда
			ПредЗамер = ЗамерВремени;
			ЗамерВремени = ТекущаяДата();
			Загрузка = " " + РабочийЦикл / 10 + "% " + Цел(РабочийЦикл/(ЗамерВремени - ПредЗамер)) + " q/s";
			ПустойЦикл = 0;
			РабочийЦикл = 0;
		КонецЕсли;

		Попытка
			Соединение = TCPСервер.ОжидатьСоединения(Таймаут);
			Соединение.ТаймаутОтправки = 500;
			Соединение.ТаймаутЧтения = 50;
		Исключение
			ПустойЦикл = ПустойЦикл + 1;
			Продолжить;
		КонецПопытки;

		Попытка
			ТекстовыеДанныеВходящие	= ПолучитьСтрокуИзДвоичныхДанных(Соединение.ПрочитатьДвоичныеДанные());
		Исключение
			ТекстовыеДанныеВходящие = "";
		КонецПопытки;

		Если ТекстовыеДанныеВходящие = "" Тогда
			Если НЕ Соединение = Неопределено Тогда
				Соединение.Закрыть();
			КонецЕсли;
			ПустойЦикл = ПустойЦикл + 1;
			Продолжить;
		КонецЕсли;

		РабочийЦикл = РабочийЦикл + 1;

		Если Лев(ТекстовыеДанныеВходящие, 4) = "osdb" Тогда
			Сообщить(ТекстовыеДанныеВходящие);
			Попытка
				Соединение.ОтправитьДвоичныеДанные(ОбработатьДанные(Соединение, СтрокуВСтруктуру(ТекстовыеДанныеВходящие)));
			Исключение
				Сообщить(ОписаниеОшибки());
			КонецПопытки;
			Если НЕ Соединение = Неопределено Тогда
				Соединение.Закрыть();
			КонецЕсли;
		КонецЕсли;

		Если ПерезапуститьСервер ИЛИ ОстановитьСервер Тогда
			Прервать;
		КонецЕсли;

		Соединение = Неопределено;

	КонецЦикла;

	TCPСервер.Остановить();

	Если ПерезапуститьСервер Тогда
		ЗапуститьПриложение("oscript dataserver.os " + Порт, ТекущийКаталог());
	КонецЕсли;

КонецПроцедуры

ОбработатьСоединения();
