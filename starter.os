// MIT License
// Copyright (c) 2018 Vladimir Vasiliev
// https://github.com/vasvl123/OneScriptDB
//

Перем Хост;
Перем Контроллеры;


Функция ПередатьДанные(Хост, Порт, стрДанные) Экспорт
	КоличествоПопыток = 0;
	Пока КоличествоПопыток < 10 Цикл
		Попытка
			Соединение = Новый TCPСоединение(Хост, Порт);
			Соединение.ТаймаутОтправки = 50;
			Соединение.ОтправитьДвоичныеДанные(СтруктуруВДвоичныеДанные(стрДанные));
			КоличествоПопыток = 0;
			Соединение.Закрыть();
			Возврат Истина;
		Исключение
			КоличествоПопыток = КоличествоПопыток + 1;
			Если НЕ Соединение = Неопределено Тогда
				Соединение.Закрыть();
			КонецЕсли;
		КонецПопытки;
	КонецЦикла;
	Возврат Ложь;
КонецФункции // ПередатьДанные()


Функция СтруктуруВДвоичныеДанные(знСтруктура)
	Результат = Новый Массив;
	Если НЕ знСтруктура = Неопределено Тогда
		Для каждого Элемент Из знСтруктура Цикл
			Ключ = Элемент.Ключ;
			Значение = Элемент.Значение;
			Если ТипЗнч(Значение) = Тип("Структура") Тогда
				Ключ = "*" + Ключ;
				дЗначение = СтруктуруВДвоичныеДанные(Значение);
			ИначеЕсли ТипЗнч(Значение) = Тип("ДвоичныеДанные") Тогда
				Ключ = "#" + Ключ;
				дЗначение = Значение;
			Иначе
				дЗначение = ПолучитьДвоичныеДанныеИзСтроки(Значение);
			КонецЕсли;
			дКлюч = ПолучитьДвоичныеДанныеИзСтроки(Ключ);
			рдКлюч = дКлюч.Размер();
			рдЗначение = дЗначение.Размер();
			бРезультат = Новый БуферДвоичныхДанных(6);
			бРезультат.ЗаписатьЦелое16(0, рдКлюч);
			бРезультат.ЗаписатьЦелое32(2, рдЗначение);
			Результат.Добавить(ПолучитьДвоичныеДанныеИзБуфераДвоичныхДанных(бРезультат));
			Результат.Добавить(дКлюч);
			Результат.Добавить(дЗначение);
		КонецЦикла;
	КонецЕсли;
	Возврат СоединитьДвоичныеДанные(Результат);
КонецФункции


Функция ДвоичныеДанныеВСтруктуру(Данные, Рекурсия = Истина)
	Если ТипЗнч(Данные) = Тип("ДвоичныеДанные") Тогда
		рдДанные = Данные.Размер();
		Если рдДанные = 0 Тогда
			Возврат "";
		КонецЕсли;
		бдДанные = ПолучитьБуферДвоичныхДанныхИзДвоичныхДанных(Данные);
	ИначеЕсли ТипЗнч(Данные) = Тип("БуферДвоичныхДанных") Тогда
		рдДанные = Данные.Размер;
		бдДанные = Данные;
	Иначе
		Возврат Данные;
	КонецЕсли;
	Позиция = 0;
	знСтруктура = Новый Структура;
	Пока Позиция < рдДанные - 1 Цикл
		рдКлюч = бдДанные.ПрочитатьЦелое16(Позиция);
		рдЗначение = бдДанные.ПрочитатьЦелое32(Позиция + 2);
		Если рдКлюч + рдЗначение > рдДанные Тогда // Это не структура
			Возврат ПолучитьСтрокуИзДвоичныхДанных(Данные);
		КонецЕсли;
		Ключ = ПолучитьСтрокуИзДвоичныхДанных(ПолучитьДвоичныеДанныеИзБуфераДвоичныхДанных(бдДанные.Прочитать(Позиция + 6, рдКлюч)));
		бЗначение = бдДанные.Прочитать(Позиция + 6 + рдКлюч, рдЗначение);
		Позиция = Позиция + 6 + рдКлюч + рдЗначение;
		Л = Лев(Ключ, 1);
		Если Л = "*" Тогда
			Если НЕ Рекурсия Тогда
				Продолжить;
			КонецЕсли;
			Ключ = Сред(Ключ, 2);
			Значение = ДвоичныеДанныеВСтруктуру(бЗначение);
		ИначеЕсли Л = "#" Тогда
			Ключ = Сред(Ключ, 2);
			Значение = ПолучитьДвоичныеДанныеИзБуфераДвоичныхДанных(бЗначение);
		Иначе
			Значение = ПолучитьСтрокуИзДвоичныхДанных(ПолучитьДвоичныеДанныеИзБуфераДвоичныхДанных(бЗначение));
		КонецЕсли;
		знСтруктура.Вставить(Ключ, Значение);
	КонецЦикла;
	Возврат знСтруктура;
КонецФункции


Функция ЗапуститьПроцесс(Имя, Порт)
	Попытка
		// Проверка наличия процесса
		Соединение = Новый TCPСоединение(Хост, Порт);
		Соединение.Закрыть();
		Возврат Ложь;
	Исключение
		ЗапуститьПриложение("oscript " + Имя + " " + Порт, ТекущийКаталог());
	КонецПопытки;
	Возврат Истина;
КонецФункции // ЗапуститьПроцесс()


Хост = "127.0.0.1";

Порт = 8889; // Порт стартера
ПортВ = 8888; // Порт веб-сервера
ПортД = 8887; // Порт дата-сервера
ПортК = 8886; // Порт контроллера

Таймаут = 10;

ПараметрХост = "http://vasvl123.github.io/OneScriptDB"; // путь для загрузки ресурсов

Контроллеры = Новый Соответствие;

Локальный = Истина;

TCPСервер = Новый TCPСервер(Порт);
TCPСервер.Запустить();
Сообщить("Стартер запущен на порту: " + Порт);

// Запуск веб-сервера
ЗапуститьПроцесс("webserver.os", ПортВ);

// Запуск дата-сервера
ЗапуститьПроцесс("dataserver.os", ПортД);

// Запуск контроллера
ЗапуститьПроцесс("showdata.os", ПортК);

// Параметры веб-сервера
ПередатьДанные(Хост, ПортВ, Новый Структура("Хост, Порт, ПортС, ПортД", Хост, ПортВ, Порт, ПортД));

// Параметры контроллера
стрКонтроллер = Новый Структура("procid, Хост, Порт, ПортС, ПортВ, ПортД, Субъект", 0, Хост, ПортК, Порт, ПортВ, ПортД, "Гость");
ПередатьДанные(Хост, ПортК, стрКонтроллер);
ПередатьДанные(Хост, ПортВ, стрКонтроллер);
Контроллеры.Вставить(ПортК, стрКонтроллер);

ЗавершитьПроцесс = Ложь;
ПерезапуститьПроцесс = Ложь;
ПустойЦикл = 0;

Пока НЕ ЗавершитьПроцесс Цикл

	Соединение = TCPСервер.ОжидатьСоединения(Таймаут);

	Если ПустойЦикл > 6000 Тогда
		Если НЕ Локальный Тогда
			Для каждого элКонтроллер Из Контроллеры Цикл
			структКонтроллер = элКонтроллер.Значение;
				Если ТекущаяДата() - структКонтроллер.ВремяНачало > 30 * 60 Тогда
					Если НЕ структКонтроллер.ИдПроцесса = "0" Тогда // Гостевой процесс не завершаем
						Сообщить("Контроллер " + структКонтроллер.ИдПроцесса + " простаивает, нужно завершить.");
						ПередатьДанные(структКонтроллер.Хост, структКонтроллер.Порт, Новый Структура("taskid, cmd", "0", "stopserver"));
						Контроллеры.Удалить(элКонтроллер.Ключ);
						Прервать;
					КонецЕсли;
				КонецЕсли;
			КонецЦикла;
		КонецЕсли;
		ПустойЦикл = 0;
	КонецЕсли;

	Если НЕ Соединение = Неопределено Тогда

		Соединение.ТаймаутЧтения = 50;

		Попытка
			ДанныеВходящие = ДвоичныеДанныеВСтруктуру(Соединение.ПрочитатьДвоичныеДанные());
		Исключение
			ДанныеВходящие = "";
		КонецПопытки;

		Соединение.Закрыть();

		Если ТипЗнч(ДанныеВходящие) = Тип("Структура") Тогда
			cmd = "";
			Если ДанныеВходящие.Свойство("cmd", cmd) Тогда
				Если cmd = "auth" ИЛИ cmd = "reg" Тогда
					ПрошелАвторизацию = Ложь;
					Если ДанныеВходящие.Свойство("ПрошелАвторизацию", ПрошелАвторизацию) Тогда
						Если ПрошелАвторизацию Тогда
							НовыйПортК = ПортК - 1;
							Пока НЕ ЗапуститьПроцесс("showdata.os", НовыйПортК) Цикл
								НовыйПортК = НовыйПортК - 1;
							КонецЦикла;
							стрКонтроллер = Новый Структура("procid, Хост, Порт, ПортС, ПортВ, ПортД, Субъект", ДанныеВходящие.procid, Хост, НовыйПортК, Порт, ПортВ, ПортД, ДанныеВходящие.Субъект);
							ПередатьДанные(Хост, НовыйПортК, стрКонтроллер);
							ПередатьДанные(Хост, ПортВ, стрКонтроллер);
							Контроллеры.Вставить(НовыйПортК, стрКонтроллер);
							НовыйПортК = Неопределено;
						КонецЕсли;
					КонецЕсли;
				ИначеЕсли cmd = "stopserver" И Локальный Тогда
					ЗавершитьПроцесс = Истина;
				ИначеЕсли cmd = "restartserver" И Локальный Тогда
					ЗавершитьПроцесс = Истина;
					ПерезапуститьПроцесс = Истина;
				КонецЕсли;
			КонецЕсли;
		КонецЕсли;

	Иначе
		ПустойЦикл = ПустойЦикл + 1;

	КонецЕсли;

КонецЦикла;

TCPСервер.Остановить();

// Завершить веб-сервер
ПередатьДанные(Хост, ПортВ, Новый Структура("cmd", "stopserver"));

// Завершить процессы
Для каждого элКонтроллер Из Контроллеры Цикл
	ПередатьДанные(элКонтроллер.Значение.Хост, элКонтроллер.Значение.Порт, Новый Структура("taskid, cmd", "0", "stopserver"));
КонецЦикла;

// Завершить дата-сервер
ПередатьДанные(Хост, ПортД, Новый Структура("cmd", "stopserver"));

Если ПерезапуститьПроцесс Тогда
	ЗапуститьПроцесс("starter.os", Порт);
КонецЕсли;
