// MIT License
// Copyright (c) 2018 Vladimir Vasiliev
// https://github.com/vasvl123/OneScriptDB


Перем ИмяФайлаДанных;
Перем КаталогФайловДанных Экспорт;
Перем ПотокДанных;


// открыть контейнер для чтения или записи
Функция ОткрытьПотокДанных(ДляЗаписи = Ложь, Позиция = Неопределено) Экспорт

	Попытка

		Если ДляЗаписи Тогда

			Если НЕ ПотокДанных = Неопределено Тогда
				Если НЕ ПотокДанных.ДоступнаЗапись Тогда
					ПотокДанных.Закрыть();
					ПотокДанных = Неопределено;
				КонецЕсли;
			КонецЕсли;

			Если ПотокДанных = Неопределено Тогда
				ПотокДанных = ФайловыеПотоки.ОткрытьДляЗаписи(ИмяФайлаДанных);
			КонецЕсли;

			ПотокДанных.Перейти(0, ПозицияВПотоке.Конец);

		Иначе

			Если НЕ ПотокДанных = Неопределено Тогда
				Если НЕ ПотокДанных.ДоступноЧтение Тогда
					ПотокДанных.Закрыть();
					ПотокДанных = Неопределено;
				КонецЕсли;
			КонецЕсли;

			Если ПотокДанных = Неопределено Тогда
				ПотокДанных = ФайловыеПотоки.ОткрытьДляЧтения(ИмяФайлаДанных);
			КонецЕсли;

			Если НЕ Позиция = Неопределено Тогда
				ПотокДанных.Перейти(Позиция, ПозицияВПотоке.Начало);
			КонецЕсли;

		КонецЕсли;

		Возврат Истина;

	Исключение

		Возврат Ложь;

	КонецПопытки;

КонецФункции


// Получить заголовки из контейнера
Функция ПолучитьЗаголовки() Экспорт

	ОткрытьПотокДанных();

	Если ПотокДанных = Неопределено Тогда
		Возврат Неопределено;
	КонецЕсли;

	Индекс = "";
	Перенос = "";

	ПозицияДанных = ПотокДанных.Размер();

	Пока ПозицияДанных > 8 Цикл

		ПотокДанных.Перейти(ПозицияДанных - 8, ПозицияВПотоке.Начало);

		Буфер = Новый БуферДвоичныхДанных(8);
		ПотокДанных.Прочитать(Буфер, 0, 8);
		ПозицияДанных = Буфер.ПрочитатьЦелое64(0);

		СтрЗаголовок = ПолучитьСтрокуИзДвоичныхДанных(ПолучитьДанные(ПозицияДанных));
		Заголовок = СтрокуВСтруктуру(СтрЗаголовок);

		Индекс = Индекс + Перенос + СтрЗаголовок;
		ПозицияДанных = Число(Заголовок.dataposition);

		Перенос = Символы.ПС;

	КонецЦикла;

	Возврат Индекс;

КонецФункции // ПолучитьЗаголовки()


// найти заголовок по паре ключ/значение
Функция НайтиЗаголовок(КлючИмя, КлючЗначение) Экспорт

	Перем СвойствоЗначение;

	ОткрытьПотокДанных();

	Если ПотокДанных = Неопределено Тогда
		Возврат Неопределено;
	КонецЕсли;

	ПозицияДанных = ПотокДанных.Размер();

	Пока ПозицияДанных > 8 Цикл

		ПотокДанных.Перейти(ПозицияДанных - 8, ПозицияВПотоке.Начало);

		Буфер = Новый БуферДвоичныхДанных(8);
		ПотокДанных.Прочитать(Буфер, 0, 8);
		ПозицияДанных = Буфер.ПрочитатьЦелое64(0);

		СтрЗаголовок = ПолучитьСтрокуИзДвоичныхДанных(ПолучитьДанные(ПозицияДанных));
		Заголовок = СтрокуВСтруктуру(СтрЗаголовок);

		Если Заголовок.Свойство(КлючИмя, СвойствоЗначение) Тогда
			Если СвойствоЗначение = КлючЗначение Тогда
				Возврат Заголовок;
			КонецЕсли;
		КонецЕсли;

		ПозицияДанных = Число(Заголовок.dataposition);

	КонецЦикла;

	Возврат Неопределено;

КонецФункции


// получить данные из контейнера и записать в файл
Функция ПолучитьФайл(Позиция) Экспорт

	ИмяФайла = ОбъединитьПути(КаталогФайловДанных, Позиция);

	ФайлДанных = Новый Файл(ИмяФайла);

	Если НЕ ФайлДанных.Существует() Тогда

		Попытка

			ОткрытьПотокДанных(Ложь, Позиция);

			Буфер = Новый БуферДвоичныхДанных(4);
			ПотокДанных.Прочитать(Буфер, 0, 4);
			ОбъемДанных = Буфер.ПрочитатьЦелое32(0);

			Буфер = Новый БуферДвоичныхДанных(ОбъемДанных);
			ПотокДанных.Прочитать(Буфер, 0, ОбъемДанных);

			ДанныеФайла = ФайловыеПотоки.ОткрытьДляЗаписи(ИмяФайла);
			ДанныеФайла.Записать(Буфер, 0, ОбъемДанных);

			ДанныеФайла.Закрыть();

		Исключение

			Сообщить(ОписаниеОшибки());
			Возврат Ложь;

		КонецПопытки

	КонецЕсли;

	Возврат Истина;

КонецФункции


// Получить двоичные данные из контейнера
Функция ПолучитьДанные(Позиция) Экспорт

	ОткрытьПотокДанных(Ложь, Позиция);

	Буфер = Новый БуферДвоичныхДанных(4);
	ПотокДанных.Прочитать(Буфер, 0, 4);
	ОбъемДанных = Буфер.ПрочитатьЦелое32(0);

	Буфер = Новый БуферДвоичныхДанных(ОбъемДанных);
	ПотокДанных.Прочитать(Буфер, 0, ОбъемДанных);

	Возврат ПолучитьДвоичныеДанныеИзБуфераДвоичныхДанных(Буфер);

КонецФункции


// добавить в контейнер заголовок с файлом или без
Функция ДобавитьДанные(Заголовок) Экспорт

	Перем ИмяФайла;

	ОткрытьПотокДанных(Истина);

	ПозицияДанных = ПотокДанных.ТекущаяПозиция();

	Если Заголовок.Свойство("datafile", ИмяФайла) Тогда
		Заголовок.Вставить("length", ЗаписатьДанныеФайла(ОбъединитьПути(КаталогФайловДанных, ИмяФайла)));
		Заголовок.Вставить("dataposition", ПозицияДанных);
		ПозицияДанных = ПотокДанных.ТекущаяПозиция();
	КонецЕсли;

	Заголовок.Вставить("position", ПозицияДанных);
	стрЗаголовок = СтруктуруВСтроку(Заголовок);

	ЗаписатьДанные(ПолучитьДвоичныеДанныеИзСтроки(стрЗаголовок));

	Возврат ПозицияДанных;

КонецФункции


// добавить содержимое файла в контейнер
Функция ЗаписатьДанныеФайла(ИмяФайла)

	ПозицияДанных = ПотокДанных.ТекущаяПозиция();

	ДанныеФайла = ФайловыеПотоки.ОткрытьДляЧтения(ИмяФайла);
	ОбъемДанных =  ДанныеФайла.Размер();

	Буфер = Новый БуферДвоичныхДанных(4);
	Буфер.ЗаписатьЦелое32(0, ОбъемДанных);
	ПотокДанных.Записать(Буфер, 0, 4);

	ДанныеФайла.КопироватьВ(ПотокДанных);
	ДанныеФайла.Закрыть();

	Буфер = Новый БуферДвоичныхДанных(8);
	Буфер.ЗаписатьЦелое64(0, ПозицияДанных);
	ПотокДанных.Записать(Буфер, 0, 8);
	ПотокДанных.СброситьБуферы();

	Возврат ОбъемДанных;

КонецФункции


// добавить двоичные данные в контейнер
Функция ЗаписатьДанные(дДанные)

	ПозицияДанных = ПотокДанных.ТекущаяПозиция();

	ОбъемДанных =  дДанные.Размер();

	Буфер = Новый БуферДвоичныхДанных(4);
	Буфер.ЗаписатьЦелое32(0, ОбъемДанных);
	ПотокДанных.Записать(Буфер, 0, 4);

	Буфер = ПолучитьБуферДвоичныхДанныхИзДвоичныхДанных(дДанные);
	ПотокДанных.Записать(Буфер, 0, ОбъемДанных);

	Буфер = Новый БуферДвоичныхДанных(8);
	Буфер.ЗаписатьЦелое64(0, ПозицияДанных);
	ПотокДанных.Записать(Буфер, 0, 8);
	ПотокДанных.СброситьБуферы();

	Возврат ОбъемДанных;

КонецФункции


Функция СтрокуВСтруктуру(Знач Стр)
	Стр = СтрРазделить(Стр, Символы.Таб);
	Ключ = Неопределено;
	Рез = Неопределено;
	Для Каждого знСтр Из Стр Цикл
		Если Ключ = Неопределено Тогда
			Ключ = знСтр;
		Иначе
			Если Рез = Неопределено Тогда
				Рез = Новый Структура;
			КонецЕсли;
			Рез.Вставить(Ключ, знСтр);
			Ключ = Неопределено;
		КонецЕсли;
	КонецЦикла;
	Возврат Рез;
КонецФункции


Функция СтруктуруВСтроку(Структ)
	Результат = "";
	Если НЕ Структ = Неопределено Тогда
		Для каждого Элемент Из Структ Цикл
			Результат = ?(Результат = "", "", Результат + Символы.Таб) + Элемент.Ключ + Символы.Таб + Элемент.Значение;
		КонецЦикла;
	КонецЕсли;
	Возврат Результат;
КонецФункции


Функция ПриСозданииОбъекта(ЗначИмяФайлаДанных);
	ИмяФайлаДанных = ОбъединитьПути(ТекущийКаталог(), "data", ЗначИмяФайлаДанных  + ".osdb");
	КаталогФайловДанных = ОбъединитьПути(ТекущийКаталог(), "data", ЗначИмяФайлаДанных  + ".files");
	Файл = Новый Файл(ИмяФайлаДанных);
	Если НЕ Файл.Существует() Тогда
		Файл = Новый ТекстовыйДокумент;
		Файл.Записать(ИмяФайлаДанных);
		СоздатьКаталог(КаталогФайловДанных);
	КонецЕсли;
КонецФункции
