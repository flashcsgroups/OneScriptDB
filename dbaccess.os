Перем ИмяФайлаДанных;
Перем КаталогФайловДанных Экспорт;
Перем ПотокДанных;

//Функция ТекущийКаталог()
//	Возврат "c:\os\srv";
//КонецФункции // ()

//Функция ОбъединитьПути(п1,п2,п3 = "")
//	возврат п1 + "\" + п2 + ?(п3 = "", "", "\" + п3);
//КонецФункции // ()


Функция ПриСозданииОбъекта(ЗначИмяФайлаДанных);

	ИмяФайлаДанных = ОбъединитьПути(ТекущийКаталог(), "data", ЗначИмяФайлаДанных  + ".osdb");
	КаталогФайловДанных = ОбъединитьПути(ТекущийКаталог(), "data", ЗначИмяФайлаДанных  + ".files");

	СоздатьКаталог(КаталогФайловДанных);

	//КтоКрайний = Новый Структура;

КонецФункции


Функция ОткрытьПотокДанных(ДляЗаписи = Ложь, Позиция = Неопределено) Экспорт

	Попытка

		Если ДляЗаписи Тогда

			Если НЕ ПотокДанных = Неопределено Тогда
				Если НЕ ПотокДанных.ДоступнаЗапись Тогда
					ПотокДанных.Закрыть();
					ПотокДанных = Неопределено;
				КонецЕсли;
			КонецЕсли;

			Если ПотокДанных = Неопределено Тогда
				ПотокДанных = ФайловыеПотоки.ОткрытьДляЗаписи(ИмяФайлаДанных);
			КонецЕсли;

			ПотокДанных.Перейти(0, ПозицияВПотоке.Конец);

		Иначе

			Если НЕ ПотокДанных = Неопределено Тогда
				Если НЕ ПотокДанных.ДоступноЧтение Тогда
					ПотокДанных.Закрыть();
					ПотокДанных = Неопределено;
				КонецЕсли;
			КонецЕсли;

			Если ПотокДанных = Неопределено Тогда
				ПотокДанных = ФайловыеПотоки.ОткрытьДляЧтения(ИмяФайлаДанных);
			КонецЕсли;

			Если НЕ Позиция = Неопределено Тогда
				ПотокДанных.Перейти(Позиция, ПозицияВПотоке.Начало);
			КонецЕсли;

		КонецЕсли;

		Возврат Истина;

	Исключение

		Возврат Ложь;

	КонецПопытки;

КонецФункции


Функция ПолучитьФайл(ИмяДанныхНайти) Экспорт

	Перем ИмяДанных;

	ОткрытьПотокДанных();

	Если ПотокДанных = Неопределено Тогда
		Возврат Неопределено;
	КонецЕсли;

	ПозицияДанных = ПотокДанных.Размер();

	Пока ПозицияДанных > 8 Цикл

		ПотокДанных.Перейти(ПозицияДанных - 8, ПозицияВПотоке.Начало);

		Буфер = Новый БуферДвоичныхДанных(8);
		ПотокДанных.Прочитать(Буфер, 0, 8);
		ПозицияДанных = Буфер.ПрочитатьЦелое64(0);

		ПрочитатьДанные(ПозицияДанных);
		ИмяФайла = ОбъединитьПути(КаталогФайловДанных, ПозицияДанных);
		Заголовок = Новый ТекстовыйДокумент;
		Заголовок.Прочитать(ИмяФайла);
		Заголовок = СтрокуВСтруктуру(Заголовок.ПолучитьТекст());

		// ПотокДанных.Перейти(ПозицияДанных, ПозицияВПотоке.Начало);
		// ЧД = Новый ЧтениеДанных(ПотокДанных);
		// СтрокаДанные = ЧД.ПрочитатьСтроку();
		// Заголовок = СтрокуВСтруктуру(СтрокаДанные);
		// ЧД.Закрыть();

		Если Заголовок.Свойство("data", ИмяДанных) Тогда
			ПозицияДанных = Заголовок.dataposition;
			Если ИмяДанных = ИмяДанныхНайти Тогда
				ПрочитатьДанные(ПозицияДанных);
				Возврат Заголовок;
			КонецЕсли;
		КонецЕсли

	КонецЦикла;

	Возврат Неопределено;

КонецФункции


Функция ПрочитатьДанные(Позиция) Экспорт

	ИмяФайла = ОбъединитьПути(КаталогФайловДанных, Позиция);

	ФайлДанных = Новый Файл(ИмяФайла);

	Если НЕ ФайлДанных.Существует() Тогда

		Попытка

			ОткрытьПотокДанных(Ложь, Позиция);

			Буфер = Новый БуферДвоичныхДанных(4);
			ПотокДанных.Прочитать(Буфер, 0, 4);
			ОбъемДанных = Буфер.ПрочитатьЦелое32(0);

			Буфер = Новый БуферДвоичныхДанных(ОбъемДанных);
			ПотокДанных.Прочитать(Буфер, 0, ОбъемДанных);

			ДанныеФайла = ФайловыеПотоки.ОткрытьДляЗаписи(ИмяФайла);
			ДанныеФайла.Записать(Буфер, 0, ОбъемДанных);

			ДанныеФайла.Закрыть();

		Исключение

			Сообщить(ОписаниеОшибки());
			Возврат Ложь;

		КонецПопытки

	КонецЕсли;

	Возврат Истина;

КонецФункции


Функция ДобавитьДанные(НовыеДанные) Экспорт

	Перем ИмяФайла;

	ОткрытьПотокДанных(Истина);

	ПозицияДанных = ПотокДанных.ТекущаяПозиция();

	Если НовыеДанные.Свойство("datafile", ИмяФайла) Тогда
		НовыеДанные.Вставить("length", ЗаписатьДанныеФайла(ОбъединитьПути(КаталогФайловДанных, ИмяФайла)));
		НовыеДанные.Вставить("dataposition", ПозицияДанных);
		ПозицияДанных = ПотокДанных.ТекущаяПозиция();
	КонецЕсли;

	НовыеДанные.Вставить("position", ПозицияДанных);
	Заголовок = СтруктуруВСтроку(НовыеДанные);

	ИмяФайла = ОбъединитьПути(КаталогФайловДанных, ПозицияДанных);
	ФайлДанных = Новый ТекстовыйДокумент;
	ФайлДанных.ДобавитьСтроку(Заголовок);
	ФайлДанных.Записать(ИмяФайла);
	ЗаписатьДанныеФайла(ИмяФайла);
	// ПозицияЗаголовка = ПотокДанных.ТекущаяПозиция();
	// ЗД = Новый ЗаписьДанных(ПотокДанных);
	// ЗД.ЗаписатьСтроку(Заголовок);
	// ЗД.ЗаписатьЦелое64(ПозицияЗаголовка);
	// ЗД.Закрыть();

	Возврат ПозицияДанных;

КонецФункции


Функция ЗаписатьДанныеФайла(ИмяФайла)

	ПозицияДанных = ПотокДанных.ТекущаяПозиция();

	ДанныеФайла = ФайловыеПотоки.ОткрытьДляЧтения(ИмяФайла);
	ОбъемДанных =  ДанныеФайла.Размер();

	Буфер = Новый БуферДвоичныхДанных(4);
	Буфер.ЗаписатьЦелое32(0, ОбъемДанных);
	ПотокДанных.Записать(Буфер, 0, 4);

	ДанныеФайла.КопироватьВ(ПотокДанных);
	ДанныеФайла.Закрыть();

	Буфер = Новый БуферДвоичныхДанных(8);
	Буфер.ЗаписатьЦелое64(0, ПозицияДанных);
	ПотокДанных.Записать(Буфер, 0, 8);
	ПотокДанных.СброситьБуферы();

	Возврат ОбъемДанных;

КонецФункции


Функция СтрокуВСтруктуру(Стр)
	Стр = СтрРазделить(Стр, Символы.Таб);
	Ключ = Неопределено;
	Рез = Неопределено;
	Для Каждого знСтр Из Стр Цикл
		Если Ключ = Неопределено Тогда
			Ключ = знСтр;
		Иначе
			Если Рез = Неопределено Тогда
				Рез = Новый Структура;
			КонецЕсли;
			Рез.Вставить(Ключ, знСтр);
			Ключ = Неопределено;
		КонецЕсли;
	КонецЦикла;
	Возврат Рез;
КонецФункции


Функция СтруктуруВСтроку(Структ)
	Результат = "";
	Если НЕ Структ = Неопределено Тогда
		Для каждого Элемент Из Структ Цикл
			Результат = ?(Результат = "", "", Результат + Символы.Таб) + Элемент.Ключ + Символы.Таб + Элемент.Значение;
		КонецЦикла;
	КонецЕсли;
	Возврат Результат;
КонецФункции
