Перем ИмяФайлаДанных;
Перем КаталогФайловДанных Экспорт;
Перем ПотокДанных;

//Функция ТекущийКаталог()
//	Возврат "c:\os\srv";
//КонецФункции // ()

//Функция ОбъединитьПути(п1,п2,п3 = "")
//	возврат п1 + "\" + п2 + ?(п3 = "", "", "\" + п3);
//КонецФункции // ()


Функция ПриСозданииОбъекта(ЗначИмяФайлаДанных);

	ИмяФайлаДанных = ОбъединитьПути(ТекущийКаталог(), ЗначИмяФайлаДанных  + ".osdb");
	КаталогФайловДанных = ОбъединитьПути(ТекущийКаталог(), ЗначИмяФайлаДанных  + ".files");
	
	СоздатьКаталог(КаталогФайловДанных);
	
	КтоКрайний = Новый Структура;
	
КонецФункции


Функция ОткрытьПотокДанных(ДляЗаписи = Ложь, Позиция = Неопределено)

	Попытка

		Если ДляЗаписи Тогда

			Если НЕ ПотокДанных = Неопределено Тогда
				Если НЕ ПотокДанных.ДоступнаЗапись Тогда
					ПотокДанных.Закрыть();
					ПотокДанных = Неопределено;
				КонецЕсли;
			КонецЕсли;

			Если ПотокДанных = Неопределено Тогда
				ПотокДанных = ФайловыеПотоки.ОткрытьДляЗаписи(ИмяФайлаДанных);
			КонецЕсли;
			
			ПотокДанных.Перейти(0, ПозицияВПотоке.Конец);

		Иначе

			Если НЕ ПотокДанных = Неопределено Тогда
				Если НЕ ПотокДанных.ДоступноЧтение Тогда
					ПотокДанных.Закрыть();
					ПотокДанных = Неопределено;
				КонецЕсли;
			КонецЕсли;

			Если ПотокДанных = Неопределено Тогда
				ПотокДанных = ФайловыеПотоки.ОткрытьДляЧтения(ИмяФайлаДанных);
			КонецЕсли;
			
			Если НЕ Позиция = Неопределено Тогда
				ПотокДанных.Перейти(Позиция, ПозицияВПотоке.Начало);
			КонецЕсли;

		КонецЕсли;
		
		Возврат Истина; 

	Исключение
	
		Возврат Ложь; 

	КонецПопытки;
	
КонецФункции


Функция ПолучитьФайл(ПутьКФайлуНайти) Экспорт

	Перем ПутьКФайлу;

	ОткрытьПотокДанных();
	
	Если ПотокДанных = Неопределено Тогда
		Возврат Неопределено;
	КонецЕсли;
	
	ПозицияДанных = ПотокДанных.Размер();
	
	Пока ПозицияДанных > 8 Цикл
			
		ПотокДанных.Перейти(ПозицияДанных - 8, ПозицияВПотоке.Начало);

		Буфер = Новый БуферДвоичныхДанных(8);
		ПотокДанных.Прочитать(Буфер, 0, 8);
		ПозицияДанных = Буфер.ПрочитатьЦелое64(0);

		ПрочитатьДанные(ПозицияДанных);
		ИмяФайла = ОбъединитьПути(КаталогФайловДанных, ПозицияДанных);
		Заголовок = ЗагрузитьСценарий(ИмяФайла).Заголовок;
		
		Если Заголовок.Свойство("ПутьКФайлу", ПутьКФайлу) Тогда
			ПозицияДанных = Заголовок.ПозицияДанныхФайла;
			Если ПутьКФайлу = ПутьКФайлуНайти Тогда
				ПрочитатьДанные(ПозицияДанных);
				Возврат Заголовок;
			КонецЕсли;
		КонецЕсли
		
	КонецЦикла;

	Возврат Неопределено;
	
КонецФункции


Функция ПрочитатьДанные(Позиция) Экспорт

	ИмяФайла = ОбъединитьПути(КаталогФайловДанных, Позиция); 
	
	ФайлДанных = Новый Файл(ИмяФайла);

	Если НЕ ФайлДанных.Существует() Тогда

		Попытка
		
			ОткрытьПотокДанных(Ложь, Позиция);
			
			Буфер = Новый БуферДвоичныхДанных(4);
			ПотокДанных.Прочитать(Буфер, 0, 4);
			ОбъемДанных = Буфер.ПрочитатьЦелое32(0);
			
			Буфер = Новый БуферДвоичныхДанных(ОбъемДанных);
			ПотокДанных.Прочитать(Буфер, 0, ОбъемДанных);
			
			ДанныеФайла = ФайловыеПотоки.ОткрытьДляЗаписи(ИмяФайла);
			ДанныеФайла.Записать(Буфер, 0, ОбъемДанных);
			
			ДанныеФайла.Закрыть();

		Исключение
			
			Сообщить(ОписаниеОшибки());
			Возврат Ложь;
		
		КонецПопытки

	КонецЕсли;
	
	Возврат Истина;

КонецФункции


Функция ДобавитьДанные(НовыеДанные) Экспорт

	Перем ИмяФайла;

	ОткрытьПотокДанных(Истина);

	ПозицияДанных = ПотокДанных.ТекущаяПозиция();

	Если НовыеДанные.Свойство("ИмяФайла", ИмяФайла) Тогда
		НовыеДанные.Вставить("ОбъемДанных", ЗаписатьДанныеФайла(ИмяФайла));
		НовыеДанные.Вставить("ПозицияДанныхФайла", ПозицияДанных);
		ПозицияДанных = ПотокДанных.ТекущаяПозиция();
	КонецЕсли;
	
	НовыеДанные.Вставить("ПозицияДанных", ПозицияДанных);
	Заголовок = СтруктуруВСтрокуВнутр(Новый Структура("Заголовок", НовыеДанные));
	
	ИмяФайла = ОбъединитьПути(КаталогФайловДанных, ПозицияДанных); 
	
	ФайлДанных = Новый ТекстовыйДокумент;
	ФайлДанных.ДобавитьСтроку(Заголовок);
	ФайлДанных.Записать(ИмяФайла);
	
	ЗаписатьДанныеФайла(ИмяФайла);

	Возврат ПозицияДанных;
	
КонецФункции


Функция ЗаписатьДанныеФайла(ИмяФайла)

	ПозицияДанных = ПотокДанных.ТекущаяПозиция();

	ДанныеФайла = ФайловыеПотоки.ОткрытьДляЧтения(ИмяФайла);
	ОбъемДанных =  ДанныеФайла.Размер();
	
	Буфер = Новый БуферДвоичныхДанных(4);
	Буфер.ЗаписатьЦелое32(0, ОбъемДанных);
	ПотокДанных.Записать(Буфер, 0, 4);
	
	ДанныеФайла.КопироватьВ(ПотокДанных);
	ДанныеФайла.Закрыть();

	Буфер = Новый БуферДвоичныхДанных(8);
	Буфер.ЗаписатьЦелое64(0, ПозицияДанных);
	ПотокДанных.Записать(Буфер, 0, 8);
	ПотокДанных.СброситьБуферы();
	
	Возврат ОбъемДанных;
	
КонецФункции


Функция ВыгрузитьУзел(Узел, Знач Уровень)
	
	Перем Элементы;
	
	Если НЕ ТипЗнч(Узел) = Тип("Структура") Тогда
		Если ТипЗнч(Узел) = Тип("Строка") Тогда
			Кавычки = """";
		Иначе
			Кавычки = "";
		КонецЕсли;
		Возврат Кавычки +  Узел + Кавычки + ";";
	КонецЕсли;
	
	Элементы = Уровень + "Новый Структура(";
	Запятая = "";
	Кавычка = """";
	Значения = "";
	Уровень = Уровень + "	";
	
	Для каждого Элемент Из Узел Цикл
	
		Если ТипЗнч(Элемент.Значение) = Тип("Строка") Тогда
			Кавычки = """";
		Иначе
			Кавычки = "";
		КонецЕсли;
		Элементы = Элементы + Кавычка + Запятая + Элемент.Ключ;
		Если ТипЗнч(Элемент.Значение) = Тип("Структура") Тогда
			Значения = Значения + Запятая + Символы.ПС + ВыгрузитьУзел(Элемент.Значение, Уровень) + Символы.ПС + Уровень + ")";
		Иначе
			Значение = Элемент.Значение;
			Если Значение = Неопределено Тогда
				Значение = "Неопределено";
			КонецЕсли;
			Значения = Значения + Запятая + Символы.ПС + Уровень + Кавычки +  Значение + Кавычки;
		КонецЕсли;
		Запятая = ", ";
		Кавычка = "";
		
	КонецЦикла; 
	
	Если НЕ Значения = "" Тогда
		Элементы = Элементы + """," + Значения + Символы.ПС + Уровень + ");";
	КонецЕсли; 
	
	Возврат Элементы;
		
КонецФункции // ВыгрузитьУзел()


Функция СтруктуруВСтрокуВнутр(Объект)

	ДанныеЗаг = "";
	ДанныеТело = "";
	
	Для каждого элОбъект Из Объект Цикл
		ДанныеЗаг = ДанныеЗаг + "
		|Перем " +  элОбъект.Ключ + " Экспорт;";
		ДанныеТело = ДанныеТело + "
		|" + элОбъект.Ключ + " = " + ВыгрузитьУзел(элОбъект.Значение, "");
	КонецЦикла;
	
	Возврат ДанныеЗаг + ДанныеТело;
	
КонецФункции // СтруктуруВСтрокуВнутр()
